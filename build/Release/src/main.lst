C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\src\main.o
COMPILER INVOKED BY: c:\Program Files (x86)\Keil_v5\C51\BIN\C51.exe .\SRC\MAIN.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(
                    -.\build\Release\src\main.lst) INCDIR(../../../../../../Program Files (x86)/Keil_v5/C51/INC;src) DEFINE(__UVISION_VERSION
                    -=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Release\src\main.o)

line level    source

   1          #include <reg52.h>
   2          
   3          sbit ADDR0 = P1 ^ 0;
   4          sbit ADDR1 = P1 ^ 1;
   5          sbit ADDR2 = P1 ^ 2;
   6          sbit ADDR3 = P1 ^ 3;
   7          sbit ENLED = P1 ^ 4;
   8          
   9          sbit BUZZ = P1 ^ 6;
  10          
  11          sbit KEY1 = P2 ^ 4;
  12          sbit KEY2 = P2 ^ 5;
  13          sbit KEY3 = P2 ^ 6;
  14          sbit KEY4 = P2 ^ 7;
  15          
  16          /**
  17           * @author achieveil,atnhaoyang
  18           * @date 2023/12/22
  19           */
  20          
  21          unsigned char code LedChar[] = { // ÊýÂë¹ÜÏÔÊ¾×Ö·û×ª»»±í
  22              0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8,
  23              0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
  24          unsigned char LedBuff[6]     = { // ÊýÂë¹ÜÏÔÊ¾»º³åÇø
  25              0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
  26          unsigned char KeySta[4]      = { // °´¼üµ±Ç°×´Ì¬
  27              1, 1, 1, 1};
  28          
  29          bit RunFLag      = 0;  // Ãë±íÔËÐÐ±êÖ¾
  30          bit Refresh      = 1;  // Ãë±í¼ÆÊýË¢ÐÂ±êÖ¾
  31          signed char Low  = 24; // µÍ2Î»ÏÔÊ¾24Ãë¼ÆÊ±Ê£Óà
  32          signed char Mid  = 0;  // ÖÐ¼ä2Î»ÏÔÊ¾¼ÆÊ±Ê£ÓàÃëÊý
  33          signed char High = 12; // 6Î»ÊýÂë¹ÜµÄ¸ß2Î»ÏÔÊ¾¼ÆÊ±Ê£Óà·ÖÖÓÊý
  34          
  35          void Load();
  36          void KeyDriver();
  37          void all();
  38          void Reset();
  39          void StartBuzz();
  40          
  41          void main()
  42          {
  43   1          EA    = 1; // ¿ª×ÜÖÐ¶Ï
  44   1          ENLED = 0; // Ê¹ÄÜÑ¡ÔñÊýÂë¹Ü
  45   1          ADDR3 = 1;
  46   1          TMOD  = 0x01;
  47   1          TH0   = 0xF8; // T0¶¨Ê±2ms
  48   1          TL0   = 0xCD;
  49   1          ET0   = 1;
  50   1          TR0   = 1;
  51   1      
  52   1          P2 = 0xF7; // P2.3ÖÃ0£¬Ñ¡ÔñµÚ1ÐÐ°´¼ü×÷Îª¶ÀÁ¢°´¼ü
  53   1      
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 2   

  54   1          while (1) {
  55   2              Load();
  56   2              KeyDriver(); // µ÷ÓÃ°´¼üÇý¶¯º¯Êý
  57   2          }
  58   1      }
  59          
  60          // ½«ÊýÂë¹ÜµÄÖµ¼ÓÔØµ½»º³åÇø
  61          void Load()
  62          {
  63   1          // 24²¿·Ö¼ÓÔØµ½µÍ2Î»
  64   1          LedBuff[0] = LedChar[Low % 10];
  65   1          LedBuff[1] = LedChar[Low / 10];
  66   1          // Ãë²¿·Ö¼ÓÔØµ½ÖÐ2Î»
  67   1          LedBuff[2] = LedChar[Mid % 10];
  68   1          LedBuff[3] = LedChar[Mid / 10];
  69   1          // ·Ö²¿·Ö¼ÓÔØµ½¸ß2Î»
  70   1          LedBuff[4] = LedChar[High % 10];
  71   1          LedBuff[5] = LedChar[High / 10];
  72   1      
  73   1          LedBuff[2] &= 0x7F; // µãÁÁÐ¡Êýµã
  74   1      }
  75          
  76          // Ãë±í¸´Î»º¯Êý
  77          void Reset()
  78          {
  79   1          Low = 24;
  80   1          Load(); // È·±£ÔÝÍ£Ê±¿ÉÒÔ½²24¸´Î»
  81   1      }
  82          
  83          // Ãë±í¼ÆÊýº¯Êý£¬Ã¿¸ô1sµ÷ÓÃÒ»´Î½øÐÐÃë±í¼ÆÊýÀÛ¼Ó
  84          void Count()
  85          {
  86   1          unsigned int i = 0;
  87   1          if (RunFLag) // µ±´¦ÓÚÔËÐÐ×´Ì¬Ê±µÝÔö¼ÆÊýÖµ
  88   1          {
  89   2              Low--;       // 24²¿·Ö-1
  90   2              if (Low < 0) // 24²¿·ÖÎª0
  91   2              {
  92   3                  if (Mid >= 24 || High > 0)
  93   3                      Low = 24;
  94   3                  else if (Mid < 24)
  95   3                      Low = 0;
  96   3              }
  97   2              if (Mid <= 0) // ÖÐ¼äÁ½Î»Îª0£¬ÖØÐÂ¼ÆÊ±£¬¸ßÁ½Î»¼õ1
  98   2              {
  99   3                  Mid = 60;
 100   3                  High--;
 101   3              }
 102   2              Mid--;
 103   2              if (High == 0 && Mid == 0) // ¼ÆÊ±½áÊø£¬È«²¿µãÁÁ
 104   2              {
 105   3                  all();
 106   3              }
 107   2          }
 108   1      }
 109          
 110          // °´¼üÇý¶¯º¯Êý£¬¼ì²â°´¼ü¶¯×÷
 111          void KeyDriver()
 112          {
 113   1          unsigned char i;
 114   1          static unsigned char backup[4] = {1, 1, 1, 1};
 115   1      
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 3   

 116   1          for (i = 0; i < 4; i++) // Ñ­»·¼ì²â4¸ö°´¼ü
 117   1          {
 118   2              if (backup[i] != KeySta[i]) // ¼ì²â°´¼ü¶¯×÷
 119   2              {
 120   3                  if (backup[i] != 0) // °´¼ü°´ÏÂÊ±Ö´ÐÐ¶¯×÷
 121   3                  {
 122   4                      if (i == 1 && (Mid >= 24 || High > 0)) // Esc¼ü¸´Î»Ãë±í,Ö»ÓÐÔÚ¼ÆÊ±´óÓÚ24ÃëÊ±ÓÐÐ§
 123   4                          Reset();
 124   4                      else if (i == 0) // »Ø³µ¼üÆôÍ£Ãë±í
 125   4                          RunFLag = ~RunFLag;
 126   4                  }
 127   3                  backup[i] = KeySta[i]; // Ë¢ÐÂÇ°Ò»´ÎµÄ±¸·ÝÖµ
 128   3              }
 129   2          }
 130   1      }
 131          
 132          // °´¼üÉ¨Ãèº¯Êý
 133          void KeyScan()
 134          {
 135   1          unsigned char i;
 136   1          static unsigned char keybuf[4] = {// °´¼üÉ¨Ãè»º³åÇø
 137   1                                            0xFF, 0xFF, 0xFF, 0xFF};
 138   1      
 139   1          // °´¼üÖµÒÆÈë»º³åÇø
 140   1          keybuf[0] = (keybuf[0] << 1) | KEY1;
 141   1          keybuf[1] = (keybuf[1] << 1) | KEY2;
 142   1          keybuf[2] = (keybuf[2] << 1) | KEY3;
 143   1          keybuf[3] = (keybuf[3] << 1) | KEY4;
 144   1      
 145   1          // Ïû¶¶ºó¸üÐÂ°´¼ü×´Ì¬
 146   1          for (i = 0; i < 2; i++) {
 147   2              if (keybuf[i] == 0x00) { // Á¬Ðø8´ÎÉ¨ÃèÖµÎª0£¬¼´16msÄÚ¶¼ÊÇ°´ÏÂ×´Ì¬Ê±£¬¿ÉÈÏÎª°´¼üÒÑÎÈ¶¨µÄ°´ÏÂ
 148   3                  KeySta[i] = 0;
 149   3              } else if (keybuf[i] == 0xFF) { // Á¬Ðø8´ÎÉ¨ÃèÖµÎª1£¬¼´16msÄÚ¶¼ÊÇµ¯Æð×´Ì¬Ê±£¬¿ÉÈÏÎª°´¼üÒÑÎÈ¶¨µÄµ¯Æ
             -ð
 150   3                  KeySta[i] = 1;
 151   3              }
 152   2          }
 153   1      }
 154          
 155          // ÊýÂë¹Ü¶¯Ì¬É¨ÃèË¢ÐÂº¯Êý£¬ÐèÔÚ¶¨Ê±ÖÐ¶ÏÖÐµ÷ÓÃ
 156          void LedScan()
 157          {
 158   1          static unsigned char i = 0; // ¶¯Ì¬É¨ÃèË÷Òý
 159   1      
 160   1          P0 = 0xFF; // ¹Ø±ÕËùÓÐ¶ÎÑ¡Î»£¬ÏÔÊ¾ÏûÒþ
 161   1          switch (i) {
 162   2              case 0:
 163   2                  ADDR2 = 0;
 164   2                  ADDR1 = 0;
 165   2                  ADDR0 = 0;
 166   2                  i++;
 167   2                  P0 = LedBuff[0];
 168   2                  break;
 169   2              case 1:
 170   2                  ADDR2 = 0;
 171   2                  ADDR1 = 0;
 172   2                  ADDR0 = 1;
 173   2                  i++;
 174   2                  P0 = LedBuff[1];
 175   2                  break;
 176   2              case 2:
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 4   

 177   2                  ADDR2 = 0;
 178   2                  ADDR1 = 1;
 179   2                  ADDR0 = 0;
 180   2                  i++;
 181   2                  P0 = LedBuff[2];
 182   2                  break;
 183   2              case 3:
 184   2                  ADDR2 = 0;
 185   2                  ADDR1 = 1;
 186   2                  ADDR0 = 1;
 187   2                  i++;
 188   2                  P0 = LedBuff[3];
 189   2                  break;
 190   2              case 4:
 191   2                  ADDR2 = 1;
 192   2                  ADDR1 = 0;
 193   2                  ADDR0 = 0;
 194   2                  i++;
 195   2                  P0 = LedBuff[4];
 196   2                  break;
 197   2              case 5:
 198   2                  ADDR2 = 1;
 199   2                  ADDR1 = 0;
 200   2                  ADDR0 = 1;
 201   2                  i     = 0;
 202   2                  P0    = LedBuff[5];
 203   2                  break;
 204   2              default:
 205   2                  break;
 206   2          }
 207   1      }
 208          void all()
 209          {
 210   1          unsigned char x = 0;
 211   1          unsigned char i = 0;
 212   1          while (1) {
 213   2              P0 = 0xFF;
 214   2              switch (x) {
 215   3                  // µãÁÁÊýÂë¹Ü
 216   3                  case 0:
 217   3                      ADDR3 = 1;
 218   3                      ADDR2 = 0;
 219   3                      ADDR1 = 0;
 220   3                      ADDR0 = 0;
 221   3                      x++;
 222   3                      P0 = LedChar[0];
 223   3                      break;
 224   3                  case 1:
 225   3                      ADDR3 = 1;
 226   3                      ADDR2 = 0;
 227   3                      ADDR1 = 0;
 228   3                      ADDR0 = 1;
 229   3                      x++;
 230   3                      P0 = LedChar[0];
 231   3                      break;
 232   3                  case 2:
 233   3                      ADDR3 = 1;
 234   3                      ADDR2 = 0;
 235   3                      ADDR1 = 1;
 236   3                      ADDR0 = 0;
 237   3                      x++;
 238   3                      P0 = LedChar[0];
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 5   

 239   3                      break;
 240   3                  case 3:
 241   3                      ADDR3 = 1;
 242   3                      ADDR2 = 0;
 243   3                      ADDR1 = 1;
 244   3                      ADDR0 = 1;
 245   3                      x++;
 246   3                      P0 = LedChar[0];
 247   3                      break;
 248   3                  case 4:
 249   3                      ADDR3 = 1;
 250   3                      ADDR2 = 1;
 251   3                      ADDR1 = 0;
 252   3                      ADDR0 = 0;
 253   3                      x++;
 254   3                      P0 = LedChar[0];
 255   3                      break;
 256   3                  case 5:
 257   3                      ADDR3 = 1;
 258   3                      ADDR2 = 1;
 259   3                      ADDR1 = 0;
 260   3                      ADDR0 = 1;
 261   3                      x++;
 262   3                      P0 = LedChar[0];
 263   3                      break;
 264   3      
 265   3                  // µãÁÁÐ¡µÆ
 266   3                  case 6:
 267   3                      ADDR3 = 1;
 268   3                      ADDR2 = 1;
 269   3                      ADDR1 = 1;
 270   3                      ADDR0 = 0;
 271   3                      x++;
 272   3                      P0 = 0x00;
 273   3                      break;
 274   3      
 275   3                  // µãÁÁµãÕó
 276   3                  case 7:
 277   3                      ADDR3 = 0;
 278   3                      ADDR2 = 0;
 279   3                      ADDR1 = 0;
 280   3                      ADDR0 = 0;
 281   3                      x++;
 282   3                      P0 = 0x00;
 283   3                      break;
 284   3                  case 8:
 285   3                      ADDR3 = 0;
 286   3                      ADDR2 = 0;
 287   3                      ADDR1 = 0;
 288   3                      ADDR0 = 1;
 289   3                      x++;
 290   3                      P0 = 0x00;
 291   3                      break;
 292   3                  case 9:
 293   3                      ADDR3 = 0;
 294   3                      ADDR2 = 0;
 295   3                      ADDR1 = 1;
 296   3                      ADDR0 = 0;
 297   3                      x++;
 298   3                      P0 = 0x00;
 299   3                      break;
 300   3                  case 10:
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 6   

 301   3                      ADDR3 = 0;
 302   3                      ADDR2 = 0;
 303   3                      ADDR1 = 1;
 304   3                      ADDR0 = 1;
 305   3                      x++;
 306   3                      P0 = 0x00;
 307   3                      break;
 308   3                  case 11:
 309   3                      ADDR3 = 0;
 310   3                      ADDR2 = 1;
 311   3                      ADDR1 = 0;
 312   3                      ADDR0 = 0;
 313   3                      x++;
 314   3                      P0 = 0x00;
 315   3                      break;
 316   3                  case 12:
 317   3                      ADDR3 = 0;
 318   3                      ADDR2 = 1;
 319   3                      ADDR1 = 0;
 320   3                      ADDR0 = 1;
 321   3                      x++;
 322   3                      P0 = 0x00;
 323   3                      break;
 324   3                  case 13:
 325   3                      ADDR3 = 0;
 326   3                      ADDR2 = 1;
 327   3                      ADDR1 = 1;
 328   3                      ADDR0 = 0;
 329   3                      x++;
 330   3                      P0 = 0x00;
 331   3                      break;
 332   3                  case 14:
 333   3                      ADDR3 = 0;
 334   3                      ADDR2 = 1;
 335   3                      ADDR1 = 1;
 336   3                      ADDR0 = 1;
 337   3                      x     = 0;
 338   3                      P0    = 0x00;
 339   3                      break;
 340   3                  default:
 341   3                      break;
 342   3              }
 343   2              for (i = 0; i <= 200; i++)
 344   2                  ;
 345   2              StartBuzz();
 346   2          }
 347   1      }
 348          
 349          void StartBuzz()
 350          {
 351   1          BUZZ = ~BUZZ;
 352   1      }
 353          
 354          // T0ÖÐ¶Ï·þÎñº¯Êý£¬Íê³ÉÊýÂë¹Ü¡¢°´¼üÉ¨ÃèÓëÃë±í¼ÆÊý
 355          void InterruptTimer0() interrupt 1
 356          {
 357   1          static int count           = 0; // ·äÃùÆ÷Ñ­»·¼ÆÊý
 358   1          static unsigned int tmr2ms = 0;
 359   1      
 360   1          TH0 = 0xF8; // ÖØÐÂ¼ÓÔØÖØÔØÖµ
 361   1          TL0 = 0xCD;
 362   1          LedScan(); // ÊýÂë¹ÜÉ¨ÃèÏÔÊ¾
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 7   

 363   1          KeyScan(); // °´¼üÉ¨Ãè
 364   1          if (Low <= 0) {
 365   2              if (count < 100)
 366   2                  StartBuzz();
 367   2              if (Mid < 24 && High == 0)
 368   2                  count++;
 369   2          }
 370   1          // ¶¨Ê±2ms½øÐÐÒ»´ÎÃë±í¼ÆÊý
 371   1          tmr2ms++;
 372   1          if (tmr2ms >= 500) {
 373   2              tmr2ms = 0;
 374   2              Count(); // µ÷ÓÃÃë±í¼ÆÊýº¯Êý
 375   2          }
 376   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
0000 D2AF              SETB    EA
                                           ; SOURCE LINE # 44
0002 C294              CLR     ENLED
                                           ; SOURCE LINE # 45
0004 D293              SETB    ADDR3
                                           ; SOURCE LINE # 46
0006 758901            MOV     TMOD,#01H
                                           ; SOURCE LINE # 47
0009 758CF8            MOV     TH0,#0F8H
                                           ; SOURCE LINE # 48
000C 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 49
000F D2A9              SETB    ET0
                                           ; SOURCE LINE # 50
0011 D28C              SETB    TR0
                                           ; SOURCE LINE # 52
0013 75A0F7            MOV     P2,#0F7H
0016         ?C0001:
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
0016 120000      R     LCALL   Load
                                           ; SOURCE LINE # 56
0019 120000      R     LCALL   KeyDriver
                                           ; SOURCE LINE # 57
001C 80F8              SJMP    ?C0001
             ; FUNCTION main (END)

             ; FUNCTION Load (BEGIN)
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 64
0000 E500        R     MOV     A,Low
0002 75F00A            MOV     B,#0AH
0005 120000      E     LCALL   ?C?SCDIV
0008 AFF0              MOV     R7,B
000A EF                MOV     A,R7
000B 33                RLC     A
000C 95E0              SUBB    A,ACC
000E FE                MOV     R6,A
000F 7400        R     MOV     A,#LOW LedChar
0011 2F                ADD     A,R7
0012 F582              MOV     DPL,A
0014 7400        R     MOV     A,#HIGH LedChar
0016 3E                ADDC    A,R6
0017 F583              MOV     DPH,A
0019 E4                CLR     A
001A 93                MOVC    A,@A+DPTR
001B F500        R     MOV     LedBuff,A
                                           ; SOURCE LINE # 65
001D E500        R     MOV     A,Low
001F 75F00A            MOV     B,#0AH
0022 120000      E     LCALL   ?C?SCDIV
0025 FF                MOV     R7,A
0026 33                RLC     A
0027 95E0              SUBB    A,ACC
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 9   

0029 FE                MOV     R6,A
002A 7400        R     MOV     A,#LOW LedChar
002C 2F                ADD     A,R7
002D F582              MOV     DPL,A
002F 7400        R     MOV     A,#HIGH LedChar
0031 3E                ADDC    A,R6
0032 F583              MOV     DPH,A
0034 E4                CLR     A
0035 93                MOVC    A,@A+DPTR
0036 F500        R     MOV     LedBuff+01H,A
                                           ; SOURCE LINE # 67
0038 E500        R     MOV     A,Mid
003A 75F00A            MOV     B,#0AH
003D 120000      E     LCALL   ?C?SCDIV
0040 AFF0              MOV     R7,B
0042 EF                MOV     A,R7
0043 33                RLC     A
0044 95E0              SUBB    A,ACC
0046 FE                MOV     R6,A
0047 7400        R     MOV     A,#LOW LedChar
0049 2F                ADD     A,R7
004A F582              MOV     DPL,A
004C 7400        R     MOV     A,#HIGH LedChar
004E 3E                ADDC    A,R6
004F F583              MOV     DPH,A
0051 E4                CLR     A
0052 93                MOVC    A,@A+DPTR
0053 F500        R     MOV     LedBuff+02H,A
                                           ; SOURCE LINE # 68
0055 E500        R     MOV     A,Mid
0057 75F00A            MOV     B,#0AH
005A 120000      E     LCALL   ?C?SCDIV
005D FF                MOV     R7,A
005E 33                RLC     A
005F 95E0              SUBB    A,ACC
0061 FE                MOV     R6,A
0062 7400        R     MOV     A,#LOW LedChar
0064 2F                ADD     A,R7
0065 F582              MOV     DPL,A
0067 7400        R     MOV     A,#HIGH LedChar
0069 3E                ADDC    A,R6
006A F583              MOV     DPH,A
006C E4                CLR     A
006D 93                MOVC    A,@A+DPTR
006E F500        R     MOV     LedBuff+03H,A
                                           ; SOURCE LINE # 70
0070 E500        R     MOV     A,High
0072 75F00A            MOV     B,#0AH
0075 120000      E     LCALL   ?C?SCDIV
0078 AFF0              MOV     R7,B
007A EF                MOV     A,R7
007B 33                RLC     A
007C 95E0              SUBB    A,ACC
007E FE                MOV     R6,A
007F 7400        R     MOV     A,#LOW LedChar
0081 2F                ADD     A,R7
0082 F582              MOV     DPL,A
0084 7400        R     MOV     A,#HIGH LedChar
0086 3E                ADDC    A,R6
0087 F583              MOV     DPH,A
0089 E4                CLR     A
008A 93                MOVC    A,@A+DPTR
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 10  

008B F500        R     MOV     LedBuff+04H,A
                                           ; SOURCE LINE # 71
008D E500        R     MOV     A,High
008F 75F00A            MOV     B,#0AH
0092 120000      E     LCALL   ?C?SCDIV
0095 FF                MOV     R7,A
0096 33                RLC     A
0097 95E0              SUBB    A,ACC
0099 FE                MOV     R6,A
009A 7400        R     MOV     A,#LOW LedChar
009C 2F                ADD     A,R7
009D F582              MOV     DPL,A
009F 7400        R     MOV     A,#HIGH LedChar
00A1 3E                ADDC    A,R6
00A2 F583              MOV     DPH,A
00A4 E4                CLR     A
00A5 93                MOVC    A,@A+DPTR
00A6 F500        R     MOV     LedBuff+05H,A
                                           ; SOURCE LINE # 73
00A8 53007F      R     ANL     LedBuff+02H,#07FH
                                           ; SOURCE LINE # 74
00AB 22                RET     
             ; FUNCTION Load (END)

             ; FUNCTION Reset (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0000 750018      R     MOV     Low,#018H
                                           ; SOURCE LINE # 80
0003 020000      R     LJMP    Load
             ; FUNCTION Reset (END)

             ; FUNCTION Count (BEGIN)
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003 F500        R     MOV     i+01H,A
                                           ; SOURCE LINE # 87
0005 300048            JNB     RunFLag,?C0014
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0008 1500        R     DEC     Low
                                           ; SOURCE LINE # 90
000A C3                CLR     C
000B E500        R     MOV     A,Low
000D 6480              XRL     A,#080H
000F 9480              SUBB    A,#080H
0011 5022              JNC     ?C0007
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
0013 C3                CLR     C
0014 E500        R     MOV     A,Mid
0016 6480              XRL     A,#080H
0018 9498              SUBB    A,#098H
001A 5008              JNC     ?C0009
001C E500        R     MOV     A,High
001E 6480              XRL     A,#080H
0020 9480              SUBB    A,#080H
0022 4005              JC      ?C0008
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 11  

0024         ?C0009:
                                           ; SOURCE LINE # 93
0024 750018      R     MOV     Low,#018H
0027 800C              SJMP    ?C0007
0029         ?C0008:
                                           ; SOURCE LINE # 94
0029 C3                CLR     C
002A E500        R     MOV     A,Mid
002C 6480              XRL     A,#080H
002E 9498              SUBB    A,#098H
0030 5003              JNC     ?C0007
                                           ; SOURCE LINE # 95
0032 E4                CLR     A
0033 F500        R     MOV     Low,A
                                           ; SOURCE LINE # 96
0035         ?C0007:
                                           ; SOURCE LINE # 97
0035 D3                SETB    C
0036 E500        R     MOV     A,Mid
0038 6480              XRL     A,#080H
003A 9480              SUBB    A,#080H
003C 5005              JNC     ?C0012
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
003E 75003C      R     MOV     Mid,#03CH
                                           ; SOURCE LINE # 100
0041 1500        R     DEC     High
                                           ; SOURCE LINE # 101
0043         ?C0012:
                                           ; SOURCE LINE # 102
0043 1500        R     DEC     Mid
                                           ; SOURCE LINE # 103
0045 E500        R     MOV     A,High
0047 7007              JNZ     ?C0014
0049 E500        R     MOV     A,Mid
004B 7003              JNZ     ?C0014
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
004D 120000      R     LCALL   all
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
0050         ?C0014:
0050 22                RET     
             ; FUNCTION Count (END)

             ; FUNCTION KeyDriver (BEGIN)
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 116
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003         ?C0015:
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
0003 7400        R     MOV     A,#LOW KeySta
0005 2500        R     ADD     A,i
0007 F8                MOV     R0,A
0008 E6                MOV     A,@R0
0009 FF                MOV     R7,A
000A 7400        R     MOV     A,#LOW backup
000C 2500        R     ADD     A,i
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 12  

000E F8                MOV     R0,A
000F E6                MOV     A,@R0
0010 FE                MOV     R6,A
0011 6F                XRL     A,R7
0012 6032              JZ      ?C0017
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
0014 EE                MOV     A,R6
0015 6021              JZ      ?C0019
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
0017 E500        R     MOV     A,i
0019 B40116            CJNE    A,#01H,?C0020
001C C3                CLR     C
001D E500        R     MOV     A,Mid
001F 6480              XRL     A,#080H
0021 9498              SUBB    A,#098H
0023 5008              JNC     ?C0021
0025 E500        R     MOV     A,High
0027 6480              XRL     A,#080H
0029 9480              SUBB    A,#080H
002B 4005              JC      ?C0020
002D         ?C0021:
                                           ; SOURCE LINE # 123
002D 120000      R     LCALL   Reset
0030 8006              SJMP    ?C0019
0032         ?C0020:
                                           ; SOURCE LINE # 124
0032 E500        R     MOV     A,i
0034 7002              JNZ     ?C0019
                                           ; SOURCE LINE # 125
0036 B200        R     CPL     RunFLag
                                           ; SOURCE LINE # 126
0038         ?C0019:
                                           ; SOURCE LINE # 127
0038 7400        R     MOV     A,#LOW KeySta
003A 2500        R     ADD     A,i
003C F8                MOV     R0,A
003D E6                MOV     A,@R0
003E FF                MOV     R7,A
003F 7400        R     MOV     A,#LOW backup
0041 2500        R     ADD     A,i
0043 F8                MOV     R0,A
0044 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0046         ?C0017:
0046 0500        R     INC     i
0048 E500        R     MOV     A,i
004A C3                CLR     C
004B 9404              SUBB    A,#04H
004D 40B4              JC      ?C0015
                                           ; SOURCE LINE # 130
004F         ?C0024:
004F 22                RET     
             ; FUNCTION KeyDriver (END)

             ; FUNCTION KeyScan (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 140
0000 E500        R     MOV     A,keybuf
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 13  

0002 25E0              ADD     A,ACC
0004 FF                MOV     R7,A
0005 A2A4              MOV     C,KEY1
0007 E4                CLR     A
0008 33                RLC     A
0009 4F                ORL     A,R7
000A F500        R     MOV     keybuf,A
                                           ; SOURCE LINE # 141
000C E500        R     MOV     A,keybuf+01H
000E 25E0              ADD     A,ACC
0010 FF                MOV     R7,A
0011 A2A5              MOV     C,KEY2
0013 E4                CLR     A
0014 33                RLC     A
0015 4F                ORL     A,R7
0016 F500        R     MOV     keybuf+01H,A
                                           ; SOURCE LINE # 142
0018 E500        R     MOV     A,keybuf+02H
001A 25E0              ADD     A,ACC
001C FF                MOV     R7,A
001D A2A6              MOV     C,KEY3
001F E4                CLR     A
0020 33                RLC     A
0021 4F                ORL     A,R7
0022 F500        R     MOV     keybuf+02H,A
                                           ; SOURCE LINE # 143
0024 E500        R     MOV     A,keybuf+03H
0026 25E0              ADD     A,ACC
0028 FF                MOV     R7,A
0029 A2A7              MOV     C,KEY4
002B E4                CLR     A
002C 33                RLC     A
002D 4F                ORL     A,R7
002E F500        R     MOV     keybuf+03H,A
                                           ; SOURCE LINE # 146
;---- Variable 'i' assigned to Register 'R7' ----
0030 E4                CLR     A
0031 FF                MOV     R7,A
0032         ?C0025:
                                           ; SOURCE LINE # 147
0032 7400        R     MOV     A,#LOW keybuf
0034 2F                ADD     A,R7
0035 F8                MOV     R0,A
0036 E6                MOV     A,@R0
0037 FE                MOV     R6,A
0038 7008              JNZ     ?C0028
                                           ; SOURCE LINE # 148
003A 7400        R     MOV     A,#LOW KeySta
003C 2F                ADD     A,R7
003D F8                MOV     R0,A
003E E4                CLR     A
003F F6                MOV     @R0,A
                                           ; SOURCE LINE # 149
0040 800A              SJMP    ?C0027
0042         ?C0028:
0042 EE                MOV     A,R6
0043 B4FF06            CJNE    A,#0FFH,?C0027
                                           ; SOURCE LINE # 150
0046 7400        R     MOV     A,#LOW KeySta
0048 2F                ADD     A,R7
0049 F8                MOV     R0,A
004A 7601              MOV     @R0,#01H
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 14  

                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
004C         ?C0027:
004C 0F                INC     R7
004D BF02E2            CJNE    R7,#02H,?C0025
                                           ; SOURCE LINE # 153
0050         ?C0031:
0050 22                RET     
             ; FUNCTION KeyScan (END)

             ; FUNCTION LedScan (BEGIN)
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 160
0000 7580FF            MOV     P0,#0FFH
                                           ; SOURCE LINE # 161
0003 E500        R     MOV     A,i
0005 14                DEC     A
0006 601C              JZ      ?C0034
0008 14                DEC     A
0009 6025              JZ      ?C0035
000B 14                DEC     A
000C 602E              JZ      ?C0036
000E 14                DEC     A
000F 6037              JZ      ?C0037
0011 14                DEC     A
0012 6040              JZ      ?C0038
0014 2405              ADD     A,#05H
0016 7048              JNZ     ?C0040
                                           ; SOURCE LINE # 162
0018         ?C0033:
                                           ; SOURCE LINE # 163
0018 C292              CLR     ADDR2
                                           ; SOURCE LINE # 164
001A C291              CLR     ADDR1
                                           ; SOURCE LINE # 165
001C C290              CLR     ADDR0
                                           ; SOURCE LINE # 166
001E 0500        R     INC     i
                                           ; SOURCE LINE # 167
0020 850080      R     MOV     P0,LedBuff
                                           ; SOURCE LINE # 168
0023 22                RET     
                                           ; SOURCE LINE # 169
0024         ?C0034:
                                           ; SOURCE LINE # 170
0024 C292              CLR     ADDR2
                                           ; SOURCE LINE # 171
0026 C291              CLR     ADDR1
                                           ; SOURCE LINE # 172
0028 D290              SETB    ADDR0
                                           ; SOURCE LINE # 173
002A 0500        R     INC     i
                                           ; SOURCE LINE # 174
002C 850080      R     MOV     P0,LedBuff+01H
                                           ; SOURCE LINE # 175
002F 22                RET     
                                           ; SOURCE LINE # 176
0030         ?C0035:
                                           ; SOURCE LINE # 177
0030 C292              CLR     ADDR2
                                           ; SOURCE LINE # 178
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 15  

0032 D291              SETB    ADDR1
                                           ; SOURCE LINE # 179
0034 C290              CLR     ADDR0
                                           ; SOURCE LINE # 180
0036 0500        R     INC     i
                                           ; SOURCE LINE # 181
0038 850080      R     MOV     P0,LedBuff+02H
                                           ; SOURCE LINE # 182
003B 22                RET     
                                           ; SOURCE LINE # 183
003C         ?C0036:
                                           ; SOURCE LINE # 184
003C C292              CLR     ADDR2
                                           ; SOURCE LINE # 185
003E D291              SETB    ADDR1
                                           ; SOURCE LINE # 186
0040 D290              SETB    ADDR0
                                           ; SOURCE LINE # 187
0042 0500        R     INC     i
                                           ; SOURCE LINE # 188
0044 850080      R     MOV     P0,LedBuff+03H
                                           ; SOURCE LINE # 189
0047 22                RET     
                                           ; SOURCE LINE # 190
0048         ?C0037:
                                           ; SOURCE LINE # 191
0048 D292              SETB    ADDR2
                                           ; SOURCE LINE # 192
004A C291              CLR     ADDR1
                                           ; SOURCE LINE # 193
004C C290              CLR     ADDR0
                                           ; SOURCE LINE # 194
004E 0500        R     INC     i
                                           ; SOURCE LINE # 195
0050 850080      R     MOV     P0,LedBuff+04H
                                           ; SOURCE LINE # 196
0053 22                RET     
                                           ; SOURCE LINE # 197
0054         ?C0038:
                                           ; SOURCE LINE # 198
0054 D292              SETB    ADDR2
                                           ; SOURCE LINE # 199
0056 C291              CLR     ADDR1
                                           ; SOURCE LINE # 200
0058 D290              SETB    ADDR0
                                           ; SOURCE LINE # 201
005A E4                CLR     A
005B F500        R     MOV     i,A
                                           ; SOURCE LINE # 202
005D 850080      R     MOV     P0,LedBuff+05H
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
0060         ?C0040:
0060 22                RET     
             ; FUNCTION LedScan (END)

             ; FUNCTION all (BEGIN)
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 16  

                                           ; SOURCE LINE # 210
0000 E4                CLR     A
0001 F500        R     MOV     x,A
                                           ; SOURCE LINE # 211
0003 F500        R     MOV     i,A
0005         ?C0041:
                                           ; SOURCE LINE # 212
                                           ; SOURCE LINE # 213
0005 7580FF            MOV     P0,#0FFH
                                           ; SOURCE LINE # 214
0008 E500        R     MOV     A,x
000A B40F00            CJNE    A,#0FH,?C0070
000D         ?C0070:
000D 4003              JC      $ + 5H
000F 020000      R     LJMP    ?C0043
0012 900000      R     MOV     DPTR,#?C0071
0015 F8                MOV     R0,A
0016 28                ADD     A,R0
0017 28                ADD     A,R0
0018 73                JMP     @A+DPTR
0019         ?C0071:
0019 020000      R     LJMP    ?C0044
001C 020000      R     LJMP    ?C0045
001F 020000      R     LJMP    ?C0046
0022 020000      R     LJMP    ?C0047
0025 020000      R     LJMP    ?C0048
0028 020000      R     LJMP    ?C0049
002B 020000      R     LJMP    ?C0050
002E 020000      R     LJMP    ?C0051
0031 020000      R     LJMP    ?C0052
0034 020000      R     LJMP    ?C0053
0037 020000      R     LJMP    ?C0054
003A 020000      R     LJMP    ?C0055
003D 020000      R     LJMP    ?C0056
0040 020000      R     LJMP    ?C0057
0043 020000      R     LJMP    ?C0058
                                           ; SOURCE LINE # 216
0046         ?C0044:
                                           ; SOURCE LINE # 217
0046 D293              SETB    ADDR3
                                           ; SOURCE LINE # 218
0048 C292              CLR     ADDR2
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 223
004A 801A              SJMP    ?C0074
                                           ; SOURCE LINE # 224
004C         ?C0045:
                                           ; SOURCE LINE # 225
004C D293              SETB    ADDR3
                                           ; SOURCE LINE # 226
004E C292              CLR     ADDR2
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0050 801E              SJMP    ?C0075
                                           ; SOURCE LINE # 232
0052         ?C0046:
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 17  

                                           ; SOURCE LINE # 233
0052 D293              SETB    ADDR3
                                           ; SOURCE LINE # 234
0054 C292              CLR     ADDR2
                                           ; SOURCE LINE # 235
0056 D291              SETB    ADDR1
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
0058 800E              SJMP    ?C0076
                                           ; SOURCE LINE # 240
005A         ?C0047:
                                           ; SOURCE LINE # 241
005A D293              SETB    ADDR3
                                           ; SOURCE LINE # 242
005C C292              CLR     ADDR2
                                           ; SOURCE LINE # 243
005E D291              SETB    ADDR1
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
0060 8010              SJMP    ?C0077
                                           ; SOURCE LINE # 248
0062         ?C0048:
                                           ; SOURCE LINE # 249
0062 D293              SETB    ADDR3
                                           ; SOURCE LINE # 250
0064 D292              SETB    ADDR2
                                           ; SOURCE LINE # 251
0066         ?C0074:
0066 C291              CLR     ADDR1
                                           ; SOURCE LINE # 252
0068         ?C0076:
0068 C290              CLR     ADDR0
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
006A 8008              SJMP    ?C0078
                                           ; SOURCE LINE # 256
006C         ?C0049:
                                           ; SOURCE LINE # 257
006C D293              SETB    ADDR3
                                           ; SOURCE LINE # 258
006E D292              SETB    ADDR2
                                           ; SOURCE LINE # 259
0070         ?C0075:
0070 C291              CLR     ADDR1
                                           ; SOURCE LINE # 260
0072         ?C0077:
0072 D290              SETB    ADDR0
                                           ; SOURCE LINE # 261
0074         ?C0078:
0074 0500        R     INC     x
                                           ; SOURCE LINE # 262
0076 900000      R     MOV     DPTR,#LedChar
0079 E4                CLR     A
007A 93                MOVC    A,@A+DPTR
007B F580              MOV     P0,A
                                           ; SOURCE LINE # 263
007D 804C              SJMP    ?C0043
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 18  

                                           ; SOURCE LINE # 266
007F         ?C0050:
                                           ; SOURCE LINE # 267
007F D293              SETB    ADDR3
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 273
0081 802E              SJMP    ?C0079
                                           ; SOURCE LINE # 276
0083         ?C0051:
                                           ; SOURCE LINE # 277
0083 C293              CLR     ADDR3
                                           ; SOURCE LINE # 278
0085 C292              CLR     ADDR2
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
0087 8018              SJMP    ?C0080
                                           ; SOURCE LINE # 284
0089         ?C0052:
                                           ; SOURCE LINE # 285
0089 C293              CLR     ADDR3
                                           ; SOURCE LINE # 286
008B C292              CLR     ADDR2
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
008D 801A              SJMP    ?C0081
                                           ; SOURCE LINE # 292
008F         ?C0053:
                                           ; SOURCE LINE # 293
008F C293              CLR     ADDR3
                                           ; SOURCE LINE # 294
0091 C292              CLR     ADDR2
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
0093 801E              SJMP    ?C0082
                                           ; SOURCE LINE # 300
0095         ?C0054:
                                           ; SOURCE LINE # 301
0095 C293              CLR     ADDR3
                                           ; SOURCE LINE # 302
0097 C292              CLR     ADDR2
                                           ; SOURCE LINE # 303
0099 D291              SETB    ADDR1
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
009B 800E              SJMP    ?C0083
                                           ; SOURCE LINE # 308
009D         ?C0055:
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 19  

                                           ; SOURCE LINE # 309
009D C293              CLR     ADDR3
                                           ; SOURCE LINE # 310
009F D292              SETB    ADDR2
                                           ; SOURCE LINE # 311
00A1         ?C0080:
00A1 C291              CLR     ADDR1
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 315
00A3 8010              SJMP    ?C0084
                                           ; SOURCE LINE # 316
00A5         ?C0056:
                                           ; SOURCE LINE # 317
00A5 C293              CLR     ADDR3
                                           ; SOURCE LINE # 318
00A7 D292              SETB    ADDR2
                                           ; SOURCE LINE # 319
00A9         ?C0081:
00A9 C291              CLR     ADDR1
                                           ; SOURCE LINE # 320
00AB         ?C0083:
00AB D290              SETB    ADDR0
                                           ; SOURCE LINE # 321
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 323
00AD 8008              SJMP    ?C0085
                                           ; SOURCE LINE # 324
00AF         ?C0057:
                                           ; SOURCE LINE # 325
00AF C293              CLR     ADDR3
                                           ; SOURCE LINE # 326
00B1         ?C0079:
00B1 D292              SETB    ADDR2
                                           ; SOURCE LINE # 327
00B3         ?C0082:
00B3 D291              SETB    ADDR1
                                           ; SOURCE LINE # 328
00B5         ?C0084:
00B5 C290              CLR     ADDR0
                                           ; SOURCE LINE # 329
00B7         ?C0085:
00B7 0500        R     INC     x
                                           ; SOURCE LINE # 330
00B9 E4                CLR     A
00BA F580              MOV     P0,A
                                           ; SOURCE LINE # 331
00BC 800D              SJMP    ?C0043
                                           ; SOURCE LINE # 332
00BE         ?C0058:
                                           ; SOURCE LINE # 333
00BE C293              CLR     ADDR3
                                           ; SOURCE LINE # 334
00C0 D292              SETB    ADDR2
                                           ; SOURCE LINE # 335
00C2 D291              SETB    ADDR1
                                           ; SOURCE LINE # 336
00C4 D290              SETB    ADDR0
                                           ; SOURCE LINE # 337
00C6 E4                CLR     A
00C7 F500        R     MOV     x,A
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 20  

                                           ; SOURCE LINE # 338
00C9 F580              MOV     P0,A
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 340
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 342
00CB         ?C0043:
                                           ; SOURCE LINE # 343
00CB E4                CLR     A
00CC F500        R     MOV     i,A
00CE         ?C0060:
00CE 0500        R     INC     i
00D0 E500        R     MOV     A,i
00D2 D3                SETB    C
00D3 94C8              SUBB    A,#0C8H
00D5 40F7              JC      ?C0060
00D7         ?C0061:
                                           ; SOURCE LINE # 345
00D7 120000      R     LCALL   StartBuzz
                                           ; SOURCE LINE # 346
00DA 020000      R     LJMP    ?C0041
             ; FUNCTION all (END)

             ; FUNCTION StartBuzz (BEGIN)
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
0000 B296              CPL     BUZZ
                                           ; SOURCE LINE # 352
0002 22                RET     
             ; FUNCTION StartBuzz (END)

             ; FUNCTION InterruptTimer0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 360
001D 758CF8            MOV     TH0,#0F8H
                                           ; SOURCE LINE # 361
0020 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 362
0023 120000      R     LCALL   LedScan
                                           ; SOURCE LINE # 363
0026 120000      R     LCALL   KeyScan
                                           ; SOURCE LINE # 364
0029 D3                SETB    C
002A E500        R     MOV     A,Low
002C 6480              XRL     A,#080H
002E 9480              SUBB    A,#080H
0030 5025              JNC     ?C0065
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 21  

                                           ; SOURCE LINE # 365
0032 C3                CLR     C
0033 E500        R     MOV     A,count+01H
0035 9464              SUBB    A,#064H
0037 E500        R     MOV     A,count
0039 6480              XRL     A,#080H
003B 9480              SUBB    A,#080H
003D 5003              JNC     ?C0066
                                           ; SOURCE LINE # 366
003F 120000      R     LCALL   StartBuzz
0042         ?C0066:
                                           ; SOURCE LINE # 367
0042 C3                CLR     C
0043 E500        R     MOV     A,Mid
0045 6480              XRL     A,#080H
0047 9498              SUBB    A,#098H
0049 500C              JNC     ?C0065
004B E500        R     MOV     A,High
004D 7008              JNZ     ?C0065
                                           ; SOURCE LINE # 368
004F 0500        R     INC     count+01H
0051 E500        R     MOV     A,count+01H
0053 7002              JNZ     ?C0072
0055 0500        R     INC     count
0057         ?C0072:
                                           ; SOURCE LINE # 369
0057         ?C0065:
                                           ; SOURCE LINE # 371
0057 0500        R     INC     tmr2ms+01H
0059 E500        R     MOV     A,tmr2ms+01H
005B 7002              JNZ     ?C0073
005D 0500        R     INC     tmr2ms
005F         ?C0073:
                                           ; SOURCE LINE # 372
005F C3                CLR     C
0060 94F4              SUBB    A,#0F4H
0062 E500        R     MOV     A,tmr2ms
0064 9401              SUBB    A,#01H
0066 4009              JC      ?C0069
                                           ; SOURCE LINE # 373
0068 750000      R     MOV     tmr2ms,#00H
006B 750000      R     MOV     tmr2ms+01H,#00H
                                           ; SOURCE LINE # 374
006E 120000      R     LCALL   Count
                                           ; SOURCE LINE # 375
                                           ; SOURCE LINE # 376
0071         ?C0069:
0071 D007              POP     AR7
0073 D006              POP     AR6
0075 D005              POP     AR5
0077 D004              POP     AR4
0079 D003              POP     AR3
007B D002              POP     AR2
007D D001              POP     AR1
007F D000              POP     AR0
0081 D0D0              POP     PSW
0083 D082              POP     DPL
0085 D083              POP     DPH
0087 D0F0              POP     B
0089 D0E0              POP     ACC
008B 32                RETI    
             ; FUNCTION InterruptTimer0 (END)
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 22  


C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 23  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
Load . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
High . . . . . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     000DH  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
Reset. . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
InterruptTimer0. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  count. . . . . . . . . . . . . . . .  STATIC   DATA   INT      0009H  2
  tmr2ms . . . . . . . . . . . . . . .  STATIC   DATA   U_INT    000BH  2
Count. . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
RunFLag. . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
LedChar. . . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  16
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
KeyDriver. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  backup . . . . . . . . . . . . . . .  STATIC   DATA   ARRAY    0000H  4
Mid. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     000EH  1
KEY1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
LedBuff. . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    000FH  6
KEY2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
KEY3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
LedScan. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0008H  1
KEY4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
KeyScan. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  keybuf . . . . . . . . . . . . . . .  STATIC   DATA   ARRAY    0004H  4
Low. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   CHAR     0015H  1
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 24  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
all. . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  x. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
StartBuzz. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
BUZZ . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
ADDR0. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
ADDR1. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
ADDR2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
ADDR3. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
Refresh. . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0001H  1
KeySta . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0016H  4
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
ENLED. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 12:50:40 PAGE 25  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    914    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
